// r0 : temps brut - inutile ici, les secondes sont le temps brut
// r1 : secondes
// r2 : minutes
// r3 : heures
// r4 : jours
// r5 : semaine
// r6 : mois
// r7 : année
// r8 : compte les 100 sur les 7 derniers bits et les 400 sur les 15e et 16e bits
// r9 : vaut 1 pour les incrémentations
// r10 : vaut 140 pour incrémenter les secondes - inutile ici
// r11 : vaut 60 pour les secondes / minutes

// setup
MOV %r1 $0; // initialisation des secondes

MOV %r2 $0; // initialisation des minutes

MOV %r3 $0; // initialisation des heures

MOV %r4 $1; // initialisation du jour

MOV %r5 $4; // initialisation du jour de la semaine

MOV %r6 $1; // initialisation du mois

MOV %r7 $1970; // initialisation de l'année

MOV %r15 $100;
MOV %r13 $101;
MOV %r14 %r7;

mod100:
SUB %r14 %r15;
CMP %r14 %r13;
JGE mod100;

MOV %r8 %r14;
MOV %r14 %r7;
MOV %r15 $400;
MOV %r13 $401;

mod400:
SUB %r14 %r15;
CMP %r14 %r13;
JGE mod400;

SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
ADD %r8 %r14;

MOV %r9 $1;
MOV %r11 $60;

inc:
ADD %r1 %r9;
CMP %r1 %r11;
JNE inc;

MOV %r1 $0; // remise à 0 des secondes
ADD %r2 %r9;
CMP %r2 %r11;
JNE inc;

MOV %r2 $0; // ...
MOV %r12 $24;
ADD %r3 %r9;
CMP %r3 %r12;
JNE inc;

MOV %r3 $0;
MOV %r12 $7;
ADD %r4 %r9;
ADD %r5 %r9;
CMP %r5 %r12;
JNE nextDay;

MOV %r5 $0; // si on est en fin de semaine

nextDay:
MOV %r12 $1; // janvier
CMP %r12 %r6;
JE longMonth;
MOV %r12 $2; // février
CMP %r12 %r6;
JE february;
MOV %r12 $3; // mars
CMP %r12 %r6;
JE longMonth;
MOV %r12 $4; // avril
CMP %r12 %r6;
JE shortMonth;
MOV %r12 $5; // mai
CMP %r12 %r6;
JE longMonth;
MOV %r12 $6; // juin
CMP %r12 %r6;
JE shortMonth;
MOV %r12 $7; // juillet
CMP %r12 %r6;
JE longMonth;
MOV %r12 $8; // août
CMP %r12 %r6;
JE longMonth;
MOV %r12 $9; // septembre
CMP %r12 %r6;
JE shortMonth;
MOV %r12 $10; // octobre
CMP %r12 %r6;
JE longMonth;
MOV %r12 $11; // novembre
CMP %r12 %r6;
JE shortMonth;
MOV %r12 $12; // décembre
CMP %r12 %r6;

february:  // février
MOV %r13 %r8;
SLL %r13; // décalage pour vérifier la divisibilité par 4
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
JNE twentyEight;

MOV %r13 %r8; // divisibilité par 100
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
SLL %r13;
MOV %r14 $409600; // 100 shift left 16 fois ne rentre pas sur 20 bits !!! oblige de faire les 4 derniers shifts a la main. :(
SLL %r14;
SLL %r14;
SLL %r14;
SLL %r14;
CMP %r13 %r14;
JNE bissextile;

MOV %r12 $1;
MOV %r13 $0;
STO %r12 %r13;
MOV %r13 %r8; // multiplicité par 400
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
SRL %r13;
MOV %r14 $400;
CMP %r13 %r14;
JE fourHundred;

twentyEight:
MOV %r12 $29;
CMP %r12 %r4;
JE needResetFeb;
JMP inc;

fourHundred:
MOV %r12 $1;
STO %r12 %r9;

bissextile:
MOV %r12 $30;
CMP %r12 %r4;
JE needResetFeb;

shortMonth: // mois de 30 jours
MOV %r12 $31;
CMP %r4 %r12;
JE needResetFeb;

longMonth:     // mois de 31 jours
MOV %r12 $32;
CMP %r4 %r12;
JNE inc;

needResetFeb:
MOV %r13 $0;
LOAD %r12 %r13;
CMP %r12 %r9;
JE reset100;
MOV %r13 $1;
LOAD %r12 %r13;
CMP %r12 %r9;
JE reset400;

nextMonth:
ADD %r6 %r9;
MOV %r12 $13;
MOV %r4 $1;
CMP %r12 %r6;
JNE inc;
MOV %r6 $1;
ADD %r7 %r9;
ADD %r8 %r9;
MOV %r12 $65536; 
ADD %r8 %r12;
JMP inc;

reset100:
MOV %r12 $0;
MOV %r13 $0;
STO %r12 %r13;
MOV %r12 $100;
SUB %r8 %r12;
JMP nextMonth;

reset400:
MOV %r12 $0;
MOV %r13 $1;
STO %r12 %r13;
MOV %r8 $0;
JMP nextMonth;